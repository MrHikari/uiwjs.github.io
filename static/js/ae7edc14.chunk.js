(window.webpackJsonp=window.webpackJsonp||[]).push([[365],{669:function(n,e){n.exports="Slider 滑块\n===\n\n通过拖动滑块在一个固定区间内进行选择。\n\n### 基本用法\n\n按钮样式的单选组合。\n\n\x3c!--DemoStart,bgWhite--\x3e \n```js\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 20,\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Slider\n          value={this.state.value} \n          onChange={(value)=> {\n            this.setState({ value });\n          }}\n        />\n        <div>{this.state.value}</div>\n      </div>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n## 在表单中使用\n\n在 [`<Form />`](#/components/form) 表单中应用 [`<Slider />`](#/components/slider) 组件，需要设置 `initialValue` 初始值。\n\n\x3c!--DemoStart,bgWhite--\x3e \n```js\nconst Demo = () => (\n  <div>\n    <Form\n      onSubmit={({initial, current}) => {\n        if(current.age === initial.age) {\n          Notify.error({\n            title: '提交失败！',\n            description: `表单提交年龄失败，年龄为：${current.age}，与初始化值是一样滴！`,\n          });\n        } else {\n          Notify.success({\n            title: '提交成功！',\n            description: `表单提交年龄成功，年龄为：${current.age}，将自动填充初始化值！`,\n          });\n        }\n      }}\n      fields={{\n        age: {\n          initialValue: 0,\n          labelClassName: 'fieldLabel',\n          labelFor: 'age-inline',\n          inline: true,\n          label: '年龄',\n          children: <Slider />\n        },\n      }}\n    >\n      {({ fields, state, canSubmit }) => {\n        return (\n          <div>\n            <Row gutter={10}>\n              <Col style={{ maxWidth: 300 }}>{fields.age}</Col>\n              <Col>{state.current.age}</Col>\n            </Row>\n            <Row>\n              <Col fixed>\n                <Button disabled={!canSubmit()} type=\"primary\" htmlType=\"submit\">提交</Button>\n              </Col>\n            </Row>\n          </div>\n        )\n      }}\n    </Form>\n  </div>\n)\n```\n\x3c!--End--\x3e\n\n### 禁用样式\n\n\x3c!--DemoStart,bgWhite--\x3e \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <Slider value={25} disabled />\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n## Props\n\n| 参数 | 说明 | 类型 | 默认值 |\n|--------- |-------- |--------- |-------- |\n| value | 选择的数值，为数组时即可开启范围选择，并且指定范围 | Number | `0` |\n| disabled | 是否禁用 | Boolean | `false` |\n| onChange | 值改变时触发 | Function(value) | - |"}}]);