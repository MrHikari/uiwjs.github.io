webpackJsonp([29],{857:function(n,e){n.exports='Hotkeys \u5feb\u6377\u952e\n===\n\n\u7528\u4e8e\u6355\u83b7\u952e\u76d8\u8f93\u5165\u548c\u8f93\u5165\u7684\u7ec4\u5408\u952e\uff0c\u57fa\u4e8e [hotkeys.js](https://github.com/jaywcjlove/hotkeys) \u5c01\u88c5\u7684\u7ec4\u4ef6\u3002\u4e5f\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528[react-hotkeys](https://github.com/jaywcjlove/react-hotkeys)\n\n### \u57fa\u7840\u7528\u6cd5\n\n\x3c!--DemoStart--\x3e \n```js\nconstructor(props) {\n  super(props);\n  this.state = {\n    output: `Hello, I am a component that listens to keydown and keyup of a. <br/> \n    \u4f60\u597d\uff0c\u6211\u662f\u4e00\u4e2a\u76d1\u542ckeydown\u548ckeyup\u7684\u7ec4\u4ef6\u3002<br/> \n    \u8bf7\u6441\u4e0b\u3010shift+a\u3011\u6216\u8005\u3010alt+s\u3011\u662f\u4e00\u4e0b\u6548\u679c`,\n    keyout:""\n  }\n}\nonKeyUp(keyName, e, handle) {\n  console.log("test:onKeyUp", e, handle)\n  this.setState({\n    keyout: `onKeyUp ${keyName}`,\n  });\n}\nonKeyDown(keyName, e, handle) {\n  console.log("test:onKeyDown", keyName, e, handle)\n  this.setState({\n    keyout: `onKeyDown ${keyName}`,\n  });\n}\nrender() {\n  return (\n    <Hotkeys \n      keyName="shift+a,alt+s" \n      onKeyDown={this.onKeyDown.bind(this)}\n      onKeyUp={this.onKeyUp.bind(this)}\n    >\n      <div style={{ padding: "20px" }} dangerouslySetInnerHTML={{__html:`${this.state.output}<br/>${this.state.keyout}`}} />\n    </Hotkeys>\n  )\n}\n```\n\x3c!--End--\x3e\n\n\n## API\n\n### Hotkeys\n\n| \u53c2\u6570 | \u8bf4\u660e | \u7c7b\u578b | \u9ed8\u8ba4\u503c |\n|--------- |-------- |--------- |-------- |\n| keyName | \u5feb\u6377\u952e\u7ec4\u5408\uff0c\u4e5f\u53ef\u4ee5\u662f\u5355\u4e2a\u952e\u76d1\u542c\uff0c\u4f8b\u5982\uff1a`shift+a,alt+s,enter` | String | - |\n| onKeyDown | \u952e\u76d8\u6441\u4e0b\u53bb\u4e8b\u4ef6 | Function(keyName, e, handle) | - |\n| onKeyUp | \u952e\u76d8\u5f39\u8d77\u4e8b\u4ef6 | Function(keyName, e, handle) | - |\n\n### keyName\n\n\u652f\u6301\u7684\u952e `\u21e7`, `shift`, `option`, `\u2325`, `alt`, `ctrl`, `control`, `command`, `\u2318`\u3002 \n\n`\u2318` Command(\uf8ff)  \n`\u2303` Control  \n`\u2325` Option(alt)  \n`\u21e7` Shift  \n`\u21ea` Caps Lock(\u5927\u5199)   \n~~`fn` \u529f\u80fd\u952e\u5c31\u662ffn(\u4e0d\u652f\u6301)~~  \n`\u21a9\ufe0e` return/enter  \n`space` \u7a7a\u683c\u952e\n\n\n## \u4fee\u9970\u952e\u5224\u65ad\n\n\u53ef\u4ee5\u5bf9\u4e0b\u9762\u7684\u4fee\u9970\u952e\u5224\u65ad `shift` `alt` `option` `ctrl` `control` `command`\uff0c\u7279\u522b\u6ce8\u610f`+`\u548c`=`\u952e\u503c\u76f8\u540c\uff0c\u7ec4\u5408\u952e\u8bbe\u7f6e`\u2318+=`\n\n```js\nonKeyDown(keyName, e, handle) {\n  console.log("test:onKeyDown", keyName, e, handle)\n  if(e.shiftKey) console.log(\'\u5927\u54e5\u4f60\u6441\u4e0b\u4e86 shift \u952e\uff01\');\n  if(e.ctrlKey) console.log(\'\u5927\u54e5\u4f60\u6441\u4e0b\u4e86 ctrl \u952e\uff01\');\n  if(e.altKey) console.log(\'\u5927\u54e5\u4f60\u6441\u4e0b\u4e86 alt \u952e\uff01\');\n}\n```\n'}});