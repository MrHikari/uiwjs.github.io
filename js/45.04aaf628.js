webpackJsonp([45],{841:function(n,e){n.exports='Badge \u6807\u8bb0\n===\n\n\u51fa\u73b0\u5728\u6309\u94ae\u3001\u56fe\u6807\u65c1\u7684\u6570\u5b57\u6216\u72b6\u6001\u6807\u8bb0\u3002\n\n\n### \u57fa\u7840\u7528\u6cd5\n\n\u5c55\u793a\u65b0\u6d88\u606f\u6570\u91cf\u3002\n\n\x3c!--DemoStart--\x3e \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <Badge count={ 12 }>\n        <Button size="small">\u8bc4\u8bba</Button>\n      </Badge>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n\n### \u5c01\u9876\u6570\u5b57\n\n\u4e0d\u5305\u88f9\u4efb\u4f55\u5143\u7d20\u5373\u662f\u72ec\u7acb\u4f7f\u7528\uff0c\u53ef\u81ea\u5b9a\u6837\u5f0f\u5c55\u73b0\u3002\n\n\x3c!--DemoStart--\x3e \n```js\nclass Demo extends Component {\n  render() {\n    const {Row,Col} = Layout;\n    return (\n      <Row gutter="20" style={{width:280}}>\n        <Col span="6">\n          <Badge count={ 99 }>\n            <Button size="small">\u8bc4\u8bba</Button>\n          </Badge>\n        </Col>\n        <Col span="6">\n          <Badge count={ 100 }>\n            <Button size="small">\u56de\u590d</Button>\n          </Badge>\n        </Col>\n        <Col span="6">\n          <Badge count={ 99 } max={10}>\n            <Button size="small">\u70b9\u8d5e</Button>\n          </Badge>\n        </Col>\n        <Col span="6">\n          <Badge count={ 1000 } max={999}>\n            <Button size="small">\u6253\u5206</Button>\n          </Badge>\n        </Col>\n      </Row>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n### \u72ec\u7acb\u4f7f\u7528\n\n\u4e0d\u5305\u88f9\u4efb\u4f55\u5143\u7d20\u5373\u662f\u72ec\u7acb\u4f7f\u7528\uff0c\u53ef\u81ea\u5b9a\u6837\u5f0f\u5c55\u73b0\u3002\n\n\x3c!--DemoStart--\x3e \n```js\nclass Demo extends Component {\n  render() {\n    const {Row,Col} = Layout;\n    return (\n      <Row gutter="20" style={{width:150}}>\n        <Col span="6">\n          <Badge count={25} /> \n        </Col>\n        <Col span="6">\n          <Badge count={4} style={{ backgroundColor: \'#fff\', color: \'#999\', boxShadow: \'0 0 0 1px #d9d9d9 inset\' }} /> \n        </Col>\n        <Col span="6">\n          <Badge count={109} style={{ backgroundColor: \'#87d068\' }} /> \n        </Col>\n      </Row>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n### \u5c0f\u7ea2\u70b9\n\n\u4ee5\u7ea2\u70b9\u7684\u5f62\u5f0f\u6807\u6ce8\u9700\u8981\u5173\u6ce8\u7684\u5185\u5bb9\u3002\n\n\x3c!--DemoStart--\x3e \n```js\nclass Demo extends Component {\n  render() {\n    const {Row,Col} = Layout;\n    return (\n      <Row gutter="20" style={{width:350}}>\n        <Col span="6">\n          <Badge dot>\n            \u6570\u636e\u67e5\u8be2\n          </Badge>\n        </Col>\n        <Col span="6">\n          <Badge dot count={4}>\n            <Icon type=\'message-o\' />\n          </Badge>\n        </Col>\n      </Row>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n### \u52a8\u6001\n\n\u5c55\u793a\u52a8\u6001\u53d8\u5316\u7684\u6548\u679c\u3002\n\n\x3c!--DemoStart--\x3e \n```js\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: true,\n    }\n  }\n  render() {\n    const {Row,Col} = Layout;\n    const {checked} = this.state;\n    return (\n      <Row gutter="20" style={{width:350}}>\n        <Col span="6">\n          <Badge dot count={checked?1:0}>\n            \u6570\u636e\u67e5\u8be2\n          </Badge>\n        </Col>\n        <Col span="6">\n          <Switch \n            checked={this.state.checked}\n            onChange={(e,checked)=>{\n              this.setState({\n                checked:checked\n              })\n              console.log(`${checked?"\u9009\u4e2d":\'\u6ca1\u6709\u9009\u4e2d\'}`)\n          }}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n### \u72b6\u6001\u70b9\n\n\u7528\u4e8e\u8868\u793a\u72b6\u6001\u7684\u5c0f\u5706\u70b9\u3002\n\n\x3c!--DemoStart--\x3e \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <div>\n        <Badge status="success" />\n        <Badge status="error" />\n        <Badge status="default" />\n        <Badge status="processing" />\n        <Badge status="warning" />\n        <br />\n        <Badge status="success">Success</Badge>\n        <br />\n        <Badge status="error">Error</Badge>\n        <br />\n        <Badge status="default">Default</Badge>\n        <br />\n        <Badge status="processing">Processing</Badge>\n        <br />\n        <Badge status="warning">Warning</Badge>\n      </div>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n## API\n\n### Badge\n\n| \u53c2\u6570 | \u8bf4\u660e | \u7c7b\u578b | \u9ed8\u8ba4\u503c |\n|--------- |-------- |--------- |-------- |\n| style | \u9ed8\u8ba4\u8bbe\u7f6e\u8ba1\u6570\u5706\u70b9\u6837\u5f0f\uff0c\u8bbe\u7f6e`status`\uff0c`style`\u8bbe\u7f6e\u5916\u5c42\u8282\u70b9\u6837\u5f0f | Object | - |\n| count | \u5c55\u793a\u7684\u6570\u5b57 | Number | - |\n| max | \u6700\u5927\u503c\uff0c\u8d85\u8fc7\u6700\u5927\u503c\u4f1a\u663e\u793a \'{max}+\' | Number | `99` |\n| dot | \u4e0d\u5c55\u793a\u6570\u5b57\uff0c\u53ea\u6709\u4e00\u4e2a\u5c0f\u7ea2\u70b9 | Boolean | `false` |\n| status | \u8bbe\u7f6e Badge \u4e3a\u72b6\u6001\u70b9 | Enum{`success`, `processing`,`default`, `error`, `warning` } | - |\n'}});