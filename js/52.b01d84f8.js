webpackJsonp([52],{832:function(n,e){n.exports='Timestamp \u65f6\u95f4\u6233\n===\n\n\u7528\u4e8e\u65f6\u95f4\u683c\u5f0f\u5316\u3002\n\n## \u57fa\u7840\u5b9e\u4f8b\n\n\x3c!--DemoStart--\x3e \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <Timestamp value="Wed Nov 22 2017 02:06:01 GMT+0800 (CST)"/>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n## \u683c\u5f0f\u5316\u65f6\u95f4\n\n\x3c!--DemoStart--\x3e \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <div>\n        <div><Timestamp format="Y\u5e74m\u6708d\u65e5 h:i:s" value="Wed Nov 22 2017 02:06:01 GMT+0800 (CST)"/></div>\n        <div><Timestamp format="Y\u5e74m\u6708d\u65e5" value="Wed Nov 22 2017 02:06:01 GMT+0800 (CST)"/></div>\n        <div><Timestamp format={`\\\\T\\\\o\\\\d\\\\a\\\\y \\\\i\\\\s d-m-Y`} value={new Date()}/></div>\n        <div><Timestamp format={`\u4eca\u5929\u662f\uff1aY/m/d`} value={new Date()}/></div>\n        <div><Timestamp format="h:i:s" value="Wed Nov 22 2017 02:06:01 GMT+0800 (CST)"/></div>\n        <div><Timestamp format="Y" value="Wed Nov 22 2017 02:06:01 GMT+0800 (CST)"/></div>\n        <div><Timestamp format="m\u6708" value="Wed Nov 22 2017 02:06:01 GMT+0800 (CST)"/></div>\n        <div><Timestamp format="d\u65e5" value="Wed Nov 22 2017 02:06:01 GMT+0800 (CST)"/></div>\n        <div><Timestamp format="d\u65e5" value="Wed Nov 22 2017 02:06:01 GMT+0800 (CST)"/></div>\n      </div>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n## \u5012\u8ba1\u65f6\n\n\x3c!--DemoStart--\x3e \n```js\nconst fillZero = num => (num < 10 ? `0${num}` : num);\nconst hours = 60 * 60 * 1000;\nconst minutes = 60 * 1000;\n\nclass Demo extends Component {\n  renderDate(time){\n    const h = fillZero(Math.floor(time / hours));\n    const m = fillZero(Math.floor((time - (h * hours)) / minutes));\n    const s = fillZero(Math.floor((time - (h * hours) - (m * minutes)) / 1000));\n    return `${h}\u65f6 ${m}\u5206 ${s}\u79d2`;\n  }\n  render() {\n    return (\n      <div>\n        <div><Timestamp countDown={true} value={Date.now() + 26400000}/></div>\n        <div><Timestamp renderDate={this.renderDate.bind(this)} countDown={true} value={Date.now() + 26400000}/></div>\n      </div>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n## \u67d0\u65f6\u95f4\u4e4b\u524d\n\n\u591a\u5c11\u5c0f\u65f6\u524d\u3001\u591a\u5c11\u5206\u949f\u524d\u3001\u591a\u5c11\u79d2\u524d\uff0c`interval=0` \u4e0d\u89e6\u53d1\u5b9a\u65f6\u5668\uff0c\u5237\u65b0\u9875\u9762\n\n\x3c!--DemoStart--\x3e \n```js\nconst minute = 1000 * 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst halfamonth = day * 15;\nconst month = day * 30;\nconst year = month * 12;\n\nclass Demo extends Component {\n  onDateChange(number){\n    let label = \'\';\n    const _year = number/year;\n    const _month = number/month;\n    const _week = number/(7*day);\n    const _day = number/day;\n    const _hour = number/hour;\n    const _min = number/minute;\n\n    if(_year>=1) label=parseInt(_year) + "\u5e74\u524d";\n    else if(_month>=1) label=parseInt(_month) + "\u4e2a\u6708\u524d";\n    else if(_week>=1) label=parseInt(_week) + "\u5468\u524d";\n    else if(_day>=1) label=parseInt(_day) +"\u5929\u524d";\n    else if(_hour>=1) label=parseInt(_hour) +"\u4e2a\u5c0f\u65f6\u524d";\n    else if(_min>=1) label=parseInt(_min) +"\u5206\u949f\u524d";\n    else label="\u521a\u521a";\n    return (\n      <span>{label}</span>\n    )\n  }\n  render() {\n    return (\n      <div>\n        <div><Timestamp beforeDate={true} renderDate={this.onDateChange.bind(this)} value={Date.now() - 55000}/></div>\n        <div><Timestamp beforeDate={true} interval={0} renderDate={this.onDateChange.bind(this)} value={Date.now() - 31000}/></div>\n        <div><Timestamp beforeDate={true} interval={0} renderDate={this.onDateChange.bind(this)} value={Date.now() - minute*46}/></div>\n        <div><Timestamp beforeDate={true} interval={0} renderDate={this.onDateChange.bind(this)} value={Date.now() - hour*12}/></div>\n        <div><Timestamp beforeDate={true} interval={0} renderDate={this.onDateChange.bind(this)} value="Wed Nov 22 2017 02:06:01 GMT+0800 (CST)"/></div>\n      </div>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n\n## \u65f6\u533a\u8f6c\u6362\n\n`TZC` \u4e3a\u670d\u52a1\u5668\u65f6\u95f4\u65f6\u533a\uff0c\u5c06\u65f6\u95f4\u8f6c\u6362\u5230\u4e1c\u516b\u533a\u65f6\u95f4\n\n\x3c!--DemoStart--\x3e \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <Timestamp tzc={8} format="Y\u5e74m\u6708d\u65e5 h:i:s" value="Wed Nov 22 2017 02:06:01 GMT+0800 (CST)"/>\n    )\n  }\n}\n```\n\x3c!--End--\x3e\n\n## \u5b89\u88c5\u548c\u4f7f\u7528\n\n```bash\nnpm install uiw --save\n```\n\n```js\nimport { Timestamp } from \'uiw\';\n// or\nimport Timestamp from \'uiw/lib/timestamp\';\n```\n\n### Props\n\n| \u53c2\u6570 | \u8bf4\u660e | \u7c7b\u578b | \u9ed8\u8ba4\u503c |\n|--------- |-------- |--------- |-------- |\n| value | \u65e5\u671f\u503c\u4f5c\u4e3aISO8601\u5b57\u7b26\u4e32\u6216Date\u5bf9\u8c61\uff0c`countDown=true`\u7684\u65f6\u5019\uff0c\u5b83\u662f\u4e00\u4e2a\u5012\u8ba1\u65f6\u7ed3\u675f\u65f6\u95f4\u3002 | String | - |\n| format | \u683c\u5f0f\u5316\u65f6\u95f4\uff0c\u4f8b\u5982\uff1a`Y\u5e74m\u6708d\u65e5 H:i:s`\uff0c\u5e74`Y`\uff0c\u6708`m`\uff0c\u65e5`d`\uff0c\u65f6`H`\uff0c\u5206`i`\uff0c\u79d2`s` | String | `Y-m-d H:i:s` |\n| tzc | \u670d\u52a1\u5668\u65f6\u533a\uff0c\u89e3\u51b3\u56e0\u65f6\u533a\u53d8\u66f4\uff0c\u5bfc\u81f4\u663e\u793a\u670d\u52a1\u5668\u65f6\u95f4\u4e0d\u51c6\u786e time Zone Converter | Number | - |\n| startTime | \u5012\u8ba1\u65f6\uff0c\u8d77\u59cb\u65f6\u95f4 | Number/String/Date | `new Date()` |\n| beforeDate | \u67d0\u65f6\u95f4\u4e4b\u524d\uff0c\u5982`8 \u5206\u949f\u4e4b\u524d` | Boolean | `false` |\n| countDown | \u5012\u8ba1\u65f6\uff0c\u5f00\u5173 | Boolean | `false` |\n| renderDate | \u5012\u8ba1\u65f6\uff0c\u56de\u8c03\u51fd\u6570\u8fd4\u56deDom\uff0c\u7528\u4e8e\u683c\u5f0f\u5316\u65f6\u95f4 | Function(Date) | `new Date()` |\n| interval | \u5012\u8ba1\u65f6\uff0c\u95f4\u9694\u65f6\u95f4\uff0c`interval=0` \u4e0d\u89e6\u53d1\u5b9a\u65f6\u5668 | Number | `1000`ms |\n| onDateChange | \u5012\u8ba1\u65f6\uff0c\u95f4\u9694\u65f6\u95f4\u51fa\u53d1\u4e8b\u4ef6 | Number | `1000`ms |\n| onDateEnd | \u5012\u8ba1\u65f6\u7ed3\u675f\u89e6\u53d1\u4e8b\u4ef6 | Number | `1000`ms |\n'}});