webpackJsonp([38],{845:function(n,e){n.exports="Checkbox \u591a\u9009\u6846\n===\n\n\u4e00\u7ec4\u5907\u9009\u9879\u4e2d\u8fdb\u884c\u591a\u9009\n\n### \u57fa\u7840\u7528\u6cd5\n\n\u5355\u72ec\u4f7f\u7528\u53ef\u4ee5\u8868\u793a\u4e24\u79cd\u72b6\u6001\u4e4b\u95f4\u7684\u5207\u6362\uff0c\u534a\u9009\u4e2d\u53ea\u662f\u6837\u5f0f\u4e0a\u7684\u8868\u73b0\u3002\n\n\x3c!--DemoStart--\x3e \n\u7b80\u5355\u7684Checkboxs\uff0c\u4f7f\u7528`checked`\u5207\u6362\u9009\u4e2d\u72b6\u6001\u3002\n```js\nlog(e,value){\n  console.log(`checked = ${e.target.checked} - ${value}`);\n}\nrender() {\n  return (\n    <div>\n        <Checkbox onChange={this.log.bind(this)}>\u672a\u9009\u4e2d</Checkbox>\n        <Checkbox onChange={this.log.bind(this)} checked >\u9009\u4e2d</Checkbox>\n        <Checkbox onChange={this.log.bind(this)} indeterminate >\u534a\u9009\u4e2d</Checkbox>\n    </div>\n  )\n}\n```\n\x3c!--End--\x3e\n\n\n### \u4e0d\u53ef\u7528(\u7981\u7528)\n\n\u901a\u8fc7\u8bbe\u7f6e`disabled`\u5c5e\u6027\u6765\u7981\u7528\u591a\u9009\u6846\u3002\n\n\x3c!--DemoStart--\x3e\n```js\nlog(e,value){\n  console.log(`checked = ${e.target.checked} - ${value}`);\n}\nrender() {\n  return (\n    <div>\n        <Checkbox disabled onChange={this.log.bind(this)}>\u672a\u9009\u4e2d\u7981\u7528</Checkbox>\n        <Checkbox disabled onChange={this.log.bind(this)} checked>\u9009\u4e2d\u7981\u7528</Checkbox>\n        <Checkbox disabled onChange={this.log.bind(this)} indeterminate>\u534a\u9009\u4e2d\u7981\u7528</Checkbox>\n    </div>\n  )\n}\n```\n\x3c!--End--\x3e\n\n\n\n### \u53d7\u63a7\u7684\n\n\u8054\u52a8 checkbox\u3002\n\n\x3c!--DemoStart--\x3e\n```js\nconstructor(props) {\n  super(props);\n  this.state = {\n    indeterminate: true\n  }\n}\nlog(e,value){\n  console.log(`checked = ${e.target.checked} - ${value}`);\n}\nhandleChange(){\n  console.log(\"!this.state.indeterminate::\",!this.state.indeterminate)\n  this.setState({\n    indeterminate:!this.state.indeterminate\n  })\n}\nrender() {\n  return (\n    <div>\n      <Checkbox indeterminate={this.state.indeterminate} onChange={this.log.bind(this)}>\u534a\u9009\u4e2d</Checkbox>\n      <Button size=\"mini\" onClick={this.handleChange.bind(this)}>\u5207\u6362\u534a\u9009\u4e2d</Button>\n    </div>\n  )\n}\n```\n\x3c!--End--\x3e\n\n\n### \u5207\u6362\u534a\u9009\u4e2d\n\n\u8054\u52a8 `Checkbox`\u3002\n\n\x3c!--DemoStart--\x3e\n```js\nconstructor(props) {\n  super(props);\n  this.state = {\n    checked3: true,\n    disabled3: true,\n  }\n}\nhandleChange(e,value){\n  console.log(`checked = ${e.target.checked} - ${value}`);\n  this.setState({\n    checked3: value,\n  });\n}\nrender() {\n  return (\n    <div>\n      <Checkbox checked={this.state.checked3} disabled={this.state.disabled3} \n        onChange={this.handleChange.bind(this)}>\n        {`${this.state.checked ? 'Checked' : 'Unchecked'}-${this.state.disabled ? 'Disabled' : 'Enabled'}`}\n      </Checkbox>\n      <div style={{padding:\"10px 0 0 0\"}}>\n        <Button\n          size=\"mini\"\n          onClick={() => {\n            this.setState({ checked3: !this.state.checked3 });\n          }}\n        >\n          {!this.state.checked3 ? 'Check' : 'Uncheck'}\n        </Button>\n        <Button\n          style={{ marginLeft: '10px' }}\n          size=\"mini\"\n          onClick={() => {\n            this.setState({ disabled3: !this.state.disabled3 });\n          }}\n        >\n          {!this.state.disabled3 ? 'Disable' : 'Enable'}\n        </Button>\n      </div>\n    </div>\n  )\n}\n```\n\x3c!--End--\x3e\n\n\n### Checkbox \u7ec4\n\n\u65b9\u4fbf\u7684\u4ece\u6570\u7ec4\u751f\u6210 `Checkbox` \u7ec4\u3002\n\n\x3c!--DemoStart--\x3e\n```js\nconstructor(props) {\n  super(props);\n  this.state = {\n    checked3: true,\n    disabled3: true,\n  }\n}\nrender() {\n    const plainOptions = ['Apple', 'Pear', 'Orange'];\n    const options = [\n      { value: 'Apple' },\n      { value: 'Pear' },\n      { value: 'Orange' },\n    ];\n    const optionsWithDisabled = [\n      { value: 'Apple' },\n      { value: 'Pear' },\n      { value: 'Orange', disabled: false },\n    ];\n    const CheckboxGroup = Checkbox.Group;\n    return (\n      <div>            \n        <CheckboxGroup \n          options={plainOptions} \n          checkedValues={['Apple']} \n          onChange={(e,checkedValues,value,checked)=>{\n            console.log('checked = ', checkedValues);\n          }} \n        />\n        <br />\n        <CheckboxGroup \n          options={optionsWithDisabled} \n          disabled \n          checkedValues={['Apple']} \n          onChange={(e,checkedValues)=>{\n            console.log('checked = ', checkedValues);\n          }} \n        />\n      </div>\n    )\n}\n```\n\x3c!--End--\x3e\n\n\n### \u5168\u9009\n\n\u5728\u5b9e\u73b0\u5168\u9009\u6548\u679c\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u7528\u5230 `indeterminate` \u5c5e\u6027\u3002\n\n\x3c!--DemoStart--\x3e\n```js\nconstructor(props) {\n  super(props);\n  this.state = {\n    checked3: true,\n    disabled3: true,\n\n    checkedList: ['Apple', 'Pear'],\n    indeterminate: true,\n    checkAll: false,\n\n    plainOptions:['Apple', 'Pear', 'Orange']\n  }\n}\nonChange(e,checkedList,value,checked){\n  const {plainOptions} = this.state\n  console.log(\"checkedList:\",checkedList,value,checked,plainOptions)\n  this.setState({\n    checkedList,\n    indeterminate: !!checkedList.length && (checkedList.length < plainOptions.length),\n    checkAll: checkedList.length === plainOptions.length,\n  });\n}\nrender() {\n    const defaultCheckedList = ['Apple', 'Orange'];\n    const {plainOptions} = this.state\n    const options = [\n      { value: 'Apple' },\n      { value: 'Pear' },\n      { value: 'Orange' },\n    ];\n    const optionsWithDisabled = [\n      { value: 'Apple' },\n      { value: 'Pear' },\n      { value: 'Orange', disabled: false },\n    ];\n    const CheckboxGroup = Checkbox.Group;\n    return (\n      <div>            \n        <div style={{ borderBottom: '1px solid #E9E9E9',margin:\"0 0 10px 0\",padding:\"0 0 10px 0 \"}}>\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={(e,checked) => {\n              console.log(\"---\x3e\",e,checked)\n              this.setState({\n                checkedList: e.target.checked ? plainOptions : [],\n                indeterminate: false,\n                checkAll: e.target.checked,\n              });\n            }}\n            checked={this.state.checkAll}\n          >\n            Check all\n          </Checkbox>\n        </div>\n\n        <CheckboxGroup \n          options={plainOptions} \n          checkedValues={this.state.checkedList} \n          onChange={this.onChange.bind(this)} />\n      </div>\n    )\n}\n```\n\x3c!--End--\x3e\n\n## API\n\n### Checkbox Attributes\n\n| \u53c2\u6570      | \u8bf4\u660e    | \u7c7b\u578b      |  \u9ed8\u8ba4\u503c   |\n|--------- |-------- |---------- |-------- |\n| options | \u6307\u5b9a\u5f53\u524d\u662f\u5426\u9009\u4e2d | Boolean | false |\n| disabled | \u7981\u7528 | Boolean | false |\n| onChange | \u53d8\u5316\u65f6\u56de\u8c03\u51fd\u6570 | Function(e:Event, checked:Boolean) | - |\n| checked | \u6307\u5b9a\u5f53\u524d\u662f\u5426\u9009\u4e2d | Boolean | false |\n| indeterminate | \u534a\u9009\u4e2d\uff0c\u53ea\u8d1f\u8d23\u6837\u5f0f\u63a7\u5236 | Boollean | false |\n\n### Checkbox Group Attributes\n\n| \u53c2\u6570      | \u8bf4\u660e    | \u7c7b\u578b      |  \u9ed8\u8ba4\u503c   |\n|--------- |-------- |---------- |-------- |\n| options | \u6307\u5b9a\u53ef\u9009 | string[] | [] |\n| checkedValues | \u9ed8\u8ba4\u9009\u4e2d\u7684\u9009 | string[] | [] |\n| onChange | \u53d8\u5316\u65f6\u56de\u8c03\u51fd\u6570 | Function(e:Event,checkedValues:Array, value:String, checked:Boolean) | - |\n| disabled | \u7981\u7528\u6240\u6709\uff0c[options]\u4e2d\u8bbe\u7f6e\uff0cdisabled=false \u53d6\u6d88\u7981\u7528 | Boolean | false |"}});